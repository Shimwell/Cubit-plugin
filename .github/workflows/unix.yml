name: Unix

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    branches:
      - develop
      - master
  push:
    branches:
      - develop
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  main:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cubit: [17.1.0, 2021.4]
        os: [ubuntu-20.04, macos-10.15]
        include:
          - cubit: 17.1.0
            os: ubuntu-18.04
        exclude:
          - cubit: 17.1.0
            os: ubuntu-20.04      

    name: 'Trelis/Cubit Svalinn Plugin ${{ matrix.cubit }} Build for ${{ matrix.os }}'


    steps:
      - uses: actions/checkout@v2

      - name: Environment Variables
        shell: bash -l {0}
        run: |
          if [ "${{ matrix.cubit }}" == "17.1.0" ]; then
            BASE=Trelis-17.1.0
            BASESDK=Trelis-SDK-17.1.0
          elif [ "${{ matrix.cubit }}" == "2021.4" ]; then
            BASE=Coreform-Cubit-2021.4%2B15017_05893177
          fi

          if [[ "${{ matrix.os }}" == "ubuntu"*  ]]; then
              SUFFIX=Lin64
              EXT=tar.gz
          elif [[ "${{ matrix.os }}" == "mac"*  ]]; then
              SUFFIX=Mac64
              EXT=dmg
          fi

          echo ${BASE}-${SUFIX}.${EXT}

          echo "CURRENT=$(pwd)" >> $GITHUB_ENV
          echo "SCRIPTPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "PLUGIN_ABS_PATH=$GITHUB_WORKSPACE/.." >> $GITHUB_ENV
          echo "FOLDER_PKG=$GITHUB_WORKSPACE/../pkg" >> $GITHUB_ENV
          echo "CUBIT_PATH=/opt/${{ matrix.CUBIT_BASE_NAME }}" >> $GITHUB_ENV
          echo "SED=sed" >> $GITHUB_ENV
          if [ "${{ matrix.cubit }}" = "17.1.0" ]; then
            echo "CMAKE_ADDITIONAL_FLAGS=-DCMAKE_CXX_FLAGS=-D_GLIBCXX_USE_CXX11_ABI=0" >> $GITHUB_ENV
            echo "CUBIT_PKG=Trelis-17.1.0-Lin64.deb" >> $GITHUB_ENV
            echo "CUBIT_SDK_PKG=Trelis-SDK-17.1.0-Lin64.tar.gz" >> $GITHUB_ENV
            echo "UBUNTU_VERSION=18" >> $GITHUB_ENV
            echo "HDF5_PATH=/usr/lib/x86_64-linux-gnu/hdf5/serial" >> $GITHUB_ENV
          else
            echo "CUBIT_PKG=Coreform-Cubit-2020.2-Ubuntu20.deb" >> $GITHUB_ENV
            echo "CUBIT_SDK_PKG=Coreform-Cubit-2020.2-Lin64-SDK.tar.gz" >> $GITHUB_ENV
            echo "UBUNTU_VERSION=20" >> $GITHUB_ENV
            echo "HDF5_PATH=/usr/local/HDF_Group/HDF5/1.12.0" >> $GITHUB_ENV
          fi
          echo "BUILD_SHARED_LIBS=ON" >> $GITHUB_ENV
          echo "BUILD_STATIC_LIBS=OFF" >> $GITHUB_ENV
          echo "SUDO=sudo " >> $GITHUB_ENV

          echo "" >> ${HOME}/.bash_profile
          echo "source $GITHUB_WORKSPACE/scripts/unix_share_build.sh" >> $HOME/.bash_profile
      
      