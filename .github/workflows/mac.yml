name: MACOS

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    branches:
      - develop
      - master
  push:
    branches:
      - develop
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  main:
    runs-on: macos-10.15
    name: 'Trelis Svalinn Plugin 17.1 Build for Macos'


    steps:
      - uses: actions/checkout@v2

      - name: Environment Variables
        run: |
          echo "CURRENT=$(pwd)" >> $GITHUB_ENV
          echo "PLUGIN_ABS_PATH=" >> $GITHUB_ENV
          echo "SCRIPTPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "PLUGIN_ABS_PATH=$GITHUB_WORKSPACE/.." >> $GITHUB_ENV

      - name: Brew dependencies
        shell: bash
        run: |
          brew install eigen hdf5 gcc@6 

      - name: Trelis setup
        shell: bash
        env:   
          TRELIS_DEB_URL: ${{ secrets.MAC_TRELIS_17 }}
          TRELIS_SDK_URL: ${{ secrets.MAC_TRELIS_SDK_17 }}
          TRELIS_INSTALL_LOC: "/Applications/Trelis-17.1.app/Contents"
        run: |
          cd ${PLUGIN_ABS_PATH}
          curl -L https://uwmadison.box.com/shared/static/${TRELIS_DEB_URL}.dmg --output trelis.dmg
          hdiutil convert trelis.dmg -format UDTO -o treslis_eula.dmg
          hdiutil attach -plist -nobrowse -readonly -noverify -noautoopen -mountrandom treslis_eula.dmg
          ls /Volumes/Trelis-17.1.0-Mac64/Trelis-17.1.app
          cp -rf /Volumes/Trelis-17.1.0-Mac64/Trelis-17.1.app /Applications/
          hdiutil detach /Volumes/Trelis-17.1.0-Mac64
          rm -rf trelis.dmg
          cd $TRELIS_INSTALL_LOC
          curl -L https://uwmadison.box.com/shared/static/${TRELIS_SDK_URL}.gz --output trelis_sdk.tar.gz
          tar -xzf trelis_sdk.tar.gz
          mv Trelis-17.1/* ./
          cp -f Trelis-17.1.app/Contents/MacOS/* MacOS/
          cp -f bin/* MacOS/
          rm -rf bin Trelis-17.1.app
          ln -s MacOS bin
          ln -s /Applications/Trelis-17.1.app/Contents/include /Applications/include
          echo "TRELIS_INSTALL_LOC=$TRELIS_INSTALL_LOC" >> $GITHUB_ENV
      - name: Build MOAB
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}
          mkdir -pv moab/bld
          cd moab
          git clone https://bitbucket.org/fathomteam/moab -b Version5.1.0
          cd bld
          cmake ../moab -DENABLE_HDF5=ON \
                    -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/hdf5/serial \
                    -DBUILD_SHARED_LIBS=OFF \
                    -DENABLE_BLASLAPACK=OFF -DENABLE_FORTRAN=OFF \
                    -DCMAKE_CXX_FLAGS=-D_GLIBCXX_USE_CXX11_ABI=0 \
                    -DCMAKE_INSTALL_PREFIX=${PLUGIN_ABS_PATH}/moab
          make -j
          make install
          cd ../..
          rm -rf moab/moab moab/bld

      - name: build DAGMC
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}
          mkdir -pv DAGMC/bld
          cd DAGMC
          git clone https://github.com/bam241/DAGMC -b build_exe
          cd bld
          cmake ../DAGMC -DCMAKE_CXX_FLAGS=-D_GLIBCXX_USE_CXX11_ABI=0 \
                        -DMOAB_DIR=${PLUGIN_ABS_PATH}/moab \
                        -DBUILD_UWUW=ON \
                        -DBUILD_TALLY=OFF \
                        -DBUILD_BUILD_OBB=OFF \
                        -DBUILD_MAKE_WATERTIGHT=ON \
                        -DBUILD_SHARED_LIBS=OFF \
                        -DBUILD_STATIC_LIBS=ON \
                        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DCMAKE_INSTALL_PREFIX=${PLUGIN_ABS_PATH}/DAGMC
          make -j
          make install
          cd ../..
          rm -rf DAGMC/DAGMC DAGCM/bld




      - name: build plugin
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}/Trelis-plugin
          git submodule update --init

          cd ${PLUGIN_ABS_PATH}/Trelis-plugin
          cp script/*.cmake ${TRELIS_INSTALL_LOC}/MacOS/

          rm -rf bld
          mkdir -pv bld
          cd bld
          cmake .. -DCubit_DIR=${TRELIS_INSTALL_LOC}/MacOS \
                  -DCUBIT_ROOT=${TRELIS_INSTALL_LOC}/MacOS \
                  -DDAGMC_DIR=${PLUGIN_ABS_PATH}/DAGMC \
                  -DCMAKE_BUILD_TYPE=Release \
                  -DCMAKE_INSTALL_PREFIX=${PLUGIN_ABS_PATH}
          make -j
          make install

      - name: prepare pkg
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}
          mkdir -p pack/bin/plugins/svalinn
          cd pack/bin/plugins/svalinn

          # Copy all needed libraries into current directory
          cp -pPv ${PLUGIN_ABS_PATH}/lib/* .
          cp -pPv ${PLUGIN_ABS_PATH}/moab/lib/libMOAB.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libdagmc.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libmakeWatertight.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libpyne_dagmc.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libuwuw.so* .
          cp -pPv /usr/lib/x86_64-linux-gnu/libhdf5_serial.so* .
          chmod 644 *

          # Set the RPATH to be the current directory for the DAGMC libraries
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libMOAB.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libdagmc.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libmakeWatertight.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libpyne_dagmc.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libuwuw.so

          # Create the Svalinn plugin tarball
          cd ..
          ln -sv svalinn/libsvalinn_plugin.so .
          cd ../..
          tar --sort=name -czvf svalinn-plugin_linux_17.1.0.tgz bin


      - name: 'Upload package'
        uses: actions/upload-artifact@v2
        with:
          name: svalinn-plugin_linux
          path: /home/runner/work/Trelis-plugin/pack/svalinn-plugin_linux_17.1.0.tgz

